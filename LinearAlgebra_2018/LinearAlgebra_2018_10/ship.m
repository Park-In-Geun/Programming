function ship
%선원이 바다에 빠지지 않고 배에 성공적으로 도착하는 simulation입니다.
%선원이 앞이 보이지 않는 상태에서 걸음을 걸을 때 배를 향해서 오른쪽,위쪽,아래쪽 3가지 방향으로만 향한다고 가정합니다.
%선원의 초기 좌표는 (0,0)이고 (0,10), (50,10),(0, 10), (50, 10), (50, -10), (0, -10)내에 있으면 선창에 있는 것이고 
%y좌표가 -10 ~ 10 사이에 있으면서 x좌표가 51에 도달하면 배에 도착 마지막으로 선원이 10000보를 걸어도 아직 선창에 있는 경우 실패로 간주

rand('state',sum(100*clock)) %생성되는 랜덤 넘버를 바꾸기 위해 seed값을 주는 방법으로 매번 같은 난수를 생성하는것을 막기 위해 clock함수를 사용합니다.
success=0; %성공 횟수를 계산하기 위한 변수로 0으로 초기화해줍니다.
fail=0; %실패 횟수를 계산하기 위한 변수로 0으로 초기화해줍니다.
percentage=0; %성공 확률을 계산하기 위한 변수로 0으로 초기화해줍니다.

n = input('Number of simulation : '); %simulation 횟수를 입력받습니다.

for i = 1:n %1부터 입력받은 n까지 반복하는 반복문입니다.
    a = [0,0]; %선원의 좌표를 0,0으로 초기화해줍니다.
    walk = 0; %걸음수를 계산하기 위한 변수로 0으로 초기화해줍니다.

    while walk < 10000 %10000보 이상이 될 때 까지 반복하는 반복문입니다.
        r = rand; %r에다가 랜덤값을 넣어줍니다.
        if r <= 0.6 %오른쪽 방향으로 걸을 확률(60%)을 확인합니다.
            a(1) = a(1) + 1; %오른쪽 방향으로 걸었을 시 x좌표에 1을 더해줍니다.
        elseif r > 0.6 && r <=0.8 %위쪽 방향으로 걸을 확률(20%)을 확인합니다.
            a(2) = a(2) + 1; %위쪽 방향으로 걸었을 시 y좌표에 1을 더해줍니다.
        elseif r > 0.8 && r <=1 %아래쪽 방향으로 걸을 확률(20%)을 확인합니다.
            a(2) = a(2) - 1; %아래쪽 방향으로 걸을 확률(20%)을 확인합니다.
        end %조건문을 종료합니다.
        
        if a(1) > 50 %x좌표가 50보다 큰지 확인합니다.
            if (a(2) < 11 && a(2) > -11) %y좌표가 11보다 작거나 -11보다 큰지를 확인합니다.
                 success = success + 1; %성공횟수에 1을 더해줍니다.
            else %y좌표가 11보다 크거나 -11보다 작을경우입니다.
                 fail = fail + 1; %실패 횟수에 1을 더해줍니다.
            end %조건문을 종료합니다.
            break; %while 반복문을 멈추게 합니다.
        end %조건문을 종료합니다.
        walk = walk + 1; %걸음수에 1을 더해줍니다.
    end %while 반복문을 종료합니다.
end %for 반복문을 종료합니다.
percentage = success/n; %성공 확률에 성공횟수를 입력받은 횟수로 나눈 값을 넣어줍니다.

fprintf('success : %d\n',success); %성공 횟수를 출력합니다.
fprintf('fail : %d\n',fail); %실패 횟수를 출력합니다.
fprintf('success percentage : %d %%\n', percentage*100); %성공 확률을 출력합니다.
        